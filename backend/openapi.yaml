openapi: 3.0.3
info:
  title: NMS Backend
  version: 0.1.0
servers:
  - url: http://127.0.0.1:5000
paths:
  /health/:
    get:
      summary: Health check
      responses:
        '200': { description: OK }
  /patient/questionnaire/:
    post:
      summary: Submit questionnaire (creates result)
      parameters:
        - in: header
          name: X-API-Key
          required: false
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [patientId, answers]
              properties:
                patientId: { type: string }
                answers:
                  type: array
                  items:
                    type: object
                    required: [q, value]
                    properties:
                      q: { type: string }
                      value: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  resultId: { type: string }
                  patientId: { type: string }
                  risk:
                    type: object
                    properties:
                      score: { type: number }
                      label: { type: string }
  /results/:
    get:
      summary: List results (optionally filter + paginate)
      parameters:
        - in: query
          name: patientId
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100, default: 20 }
        - in: query
          name: cursorDoc
          schema: { type: string }
      responses:
        '200': { description: OK }
  /results/{id}:
    get:
      summary: Get a single result
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
        '404': { description: Not Found }
    put:
      summary: Update a result (answers/risk only)
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
        - in: header
          name: X-API-Key
          required: false
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  items:
                    type: object
                    required: [q, value]
                    properties:
                      q: { type: string }
                      value: {}
                risk:
                  type: object
                  properties:
                    score: { type: number }
                    label: { type: string }
      responses:
        '200': { description: Updated }
        '404': { description: Not Found }
    delete:
      summary: Delete a result
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
        - in: header
          name: X-API-Key
          required: false
          schema: { type: string }
      responses:
        '204': { description: Deleted }
        '404': { description: Not Found }
